@page "/"
@inject NavigationManager Navigation
@using System.Net;
@using System.Net.Sockets;
@using System.Text;
@using System.Threading.Tasks;
@inject IJSRuntime JSRuntime

<head>
    <link rel="stylesheet" href="HomeStyle.css">
   
</head>

<SectionContent SectionName="page-buttons">
    <div id="searchBox" class="input-group header-search" style="display:none;">
        <span class="input-group-text text-warning"><i class="fa fa-search"></i></span>
        <input id="txtSearch" type="text" class="form-control" placeholder="Search" value="@Model.Search" @onchange="SearchTerm" />
        <span class="input-group-text" onclick="hideSearchBox()"><i class="fa fa-times"></i></span>
    </div>
    <span id="controlBox">
        <button class="btn text-warning" onclick="showSearchBox()">
            <i class="fa fa-search"></i>
        </button>
    </span>    
</SectionContent>


<!-- Cart Sidebar -->
@*<div id="cartSidebar" class="sidebar" style="background-color: FFECB3; border: 3px solid #FF6F00; width: 300px;">
    <div class="cart-header" onclick="toggleChat()" style="background-color: #FF6F00; color: white; padding: 10px; font-size: 18px;">
        Menu Cart
    </div>
    <div class="cart-body" id="cartItems" style="height: 400px; width: 295px; overflow-y: auto; padding: 10px; background-color: #FFF3E0;"> </div>
    <div class="cart-footer">
        <p>Total: ₱<span id="cartTotal">0.00</span></p>
        <button class="checkout-btn" onclick="placeOrder()">Order Now</button>
    </div>
</div>*@

<!-- Cart Sidebar -->
<div id="cartSidebar" class="sidebar" style="background-color: #FFECB3; border: 3px solid #FF6F00; width: 300px;">
    <div class="cart-header" style="background-color: #FF6F00; color: white; padding: 10px; font-size: 18px;">
         <i class="fas fa-chevron-left" @onclick="ToggleCart"></i>
        Menu Cart
    </div>

    <div class="cart-body" id="cartItems" style="height: 400px; width: 295px; overflow-y: auto; padding: 10px; background-color: #FFF3E0;">
        @foreach (var item in CartItems)
        {
                <div class="cart-item">
                    <img src="@item.ImageUrl" class="item-image" alt="@item.Name" />
                    <div class="item-details">
                        <strong>@item.Name</strong>
                        <p>₱@item.Price</p>
                    </div>
                    <div class="quantity-controls">
                        <button @onclick="() => DecreaseQuantity(item)">−</button>
                        <span>@item.Quantity</span>
                        <button @onclick="() => IncreaseQuantity(item)">+</button>
                    </div>
                    <button class="delete-button" @onclick="() => RemoveItem(item)">🗑️</button>
                </div>
        }
    </div>
    <footer>
        <div class="cart-footer" style="display: flex; justify-content: space-between; align-items: center; padding: 10px; background-color: #FFE0B2;">
        <p style="margin: 0;">Total: ₱<span>@Total</span></p>
        <button class="checkout-btn" @onclick="PlaceOrder">Order Now</button>
    </div>
    </footer>
</div>

<!-- Chat Box -->
<div id="chatBox" class="sidebar" style="background-color: #FFECB3; border: 3px solid #FF6F00; width: 300px;">
    <div class="chat-header" onclick="toggleChat()" style="background-color: #FF6F00; color: white; padding: 10px; font-size: 18px;">
        Chat Box
    </div>
    <div class="chat-content" id="chatContent" style="height: 400px; width: 295px; overflow-y: auto; padding: 10px; background-color: #FFF3E0;">
        @foreach (var msg in Messages)
        {
            <div style="color: #5D4037; padding: 5px 0;">@msg</div>
        }
    </div>
    <div class="chat-input" style="padding: 10px; background-color: #FFECB3; margin: 5px;">
        <input @bind="OutgoingMessage" type="text" placeholder="Type a message..."
               style="width: 200px; padding: 10px; font-size: 16px; border: 1px solid #FF6F00; border-radius: 5px; margin: 5px;" />
        <button @onclick="SendMessageToSender"
                style="background-color: #FF6F00; color: white; padding: 10px; font-size: 16px; border: none; border-radius: 5px; margin-top: 5px;">
            Send
        </button>
    </div>
</div>


<!-- Hero Section -->
<section id="adSection1" style="width:100%">
    <div class="cycle-slideshow">
        <img src="/28_Treasures_Menu/1.png" style="width:100%" />
        <img src="/28_Treasures_Menu/2.png" style="width:100%" />
    </div>
</section>

<section>
    <h4>FOOD CATEGORIES</h4>
    <div class="categories">
        <div class="category-card" onclick="filterCategory('Noodles')">
            <img src="28_Treasures_Menu/Hofan_Noodles.jpg" alt="Noodles">
            <p>Noodles</p>
        </div>
        <div class="category-card" onclick="filterCategory('RiceTopping')">
            <img src="28_Treasures_Menu/Yang_Chow_Fried_Rice.jpg" alt="Rice Topping">
            <p>Rice Topping</p>
        </div>
        <div class="category-card" onclick="filterCategory('SweetDessert')">
            <img src="28_Treasures_Menu/Hakaw.jpg" alt="Sweet Dessert">
            <p>Sweet Dessert</p>
        </div>
        <div class="category-card" onclick="filterCategory('Drinks')">
            <img src="28_Treasures_Menu/Hakaw.jpg" alt="Drinks">
            <p>Drinks</p>
        </div>
        <div class="category-card" onclick="filterCategory('RoastedMeat')">
            <img src="28_Treasures_Menu/Hakaw.jpg" alt="Roasted Meat">
            <p>Roasted Meat</p>
        </div>
        <div class="category-card" onclick="filterCategory('Dimsum')">
            <img src="28_Treasures_Menu/Kutchay_Dumpling.jpg" alt="Dimsum">
            <p>Dimsum</p>
        </div>
        <div class="category-card" onclick="filterCategory('Soup')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Soup">
            <p>Soup</p>
        </div>
        <div class="category-card" onclick="filterCategory('Appetizer')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Appetizer">
            <p>Appetizer</p>
        </div>
        <div class="category-card" onclick="filterCategory('Rice')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Rice">
            <p>Rice</p>
        </div>
        <div class="category-card" onclick="filterCategory('Vegetables')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Vegetables">
            <p>Vegetables</p>
        </div>
        <div class="category-card" onclick="filterCategory('Beef')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Beef">
            <p>Beef</p>
        </div>
        <div class="category-card" onclick="filterCategory('Pork')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Pork">
            <p>Pork</p>
        </div>
        <div class="category-card" onclick="filterCategory('Chicken')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Chicken">
            <p>Chicken</p>
        </div>
        <div class="category-card" onclick="filterCategory('Seafood')">
            <img src="28_Treasures_Menu/Polonchay_with_three_mushrooms.jpg" alt="Seafood">
            <p>Seafood</p>
        </div>
    </div>
</section>

<section id="filteredItems">
    <!-- Food Items Section -->
    <div class="food-items">
        <h4>FOOD ITEMS</h4>
        <div class="food-grid" id="foodGrid">
            <!-- Food items dynamically added here -->
        </div>
    </div>
</section>



<!-- Cart Button -->
<button class="cart-button" onclick="toggleCart()">🛒</button>
<!-- Chat Toggle Button -->
<button class="chat-toggle" onclick="toggleChat()">💬</button>

<script src="js/jquery.cycle2.js"></script>
<script src="js/script.js"></script>
<script>

    function showSearchBox() {
        $('#searchBox').show();    
        $('#controlBox').hide();
    }

    function hideSearchBox() {
        $('#searchBox').hide();
        $('#controlBox').show();
    }

</script>

 @code{
    private string CartClass = "";
    private List<string> cartItems = new List<string>();

    void ToggleCart()
    {
        CartClass = CartClass == "open" ? "" : "open";
    }

    void ToggleChat()
    {
        // Similar logic for chat
    }

    private HashSet<int> favoriteItems = new HashSet<int>();

    private bool IsFavorite(int itemId) => favoriteItems.Contains(itemId);

    private void ToggleFavorite(int itemId)
    {
        if (favoriteItems.Contains(itemId))
            favoriteItems.Remove(itemId);
        else
            favoriteItems.Add(itemId);
    }

    void GoToAddToCart()
    {
        Navigation.NavigateTo("addtocart");
    }

    private TcpListener _listener;
    private const int Port = 5000;
    private List<string> Messages = new();
    private string OutgoingMessage = "";

    private const string SenderIP = "192.168.254.143"; // Update to actual sender IP
    private const int SenderPort = 5000;

    protected override async Task OnInitializedAsync()
    {
        await StartListening();
    }

    private async Task StartListening()
    {
        try
        {
            _listener = new TcpListener(IPAddress.Any, Port);
            _listener.Start();

            while (true)
            {
                var client = await _listener.AcceptTcpClientAsync();
                _ = HandleClient(client);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task HandleClient(TcpClient client)
    {
        try
        {
            using var stream = client.GetStream();
            byte[] buffer = new byte[1024];
            int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);
            string message = Encoding.UTF8.GetString(buffer, 0, bytesRead);

            Messages.Add($"Sender: {message}");
            await InvokeAsync(StateHasChanged);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Client handling error: {ex.Message}");
        }
    }

    private async Task SendMessageToSender()
    {
        if (!string.IsNullOrWhiteSpace(OutgoingMessage))
        {
            try
            {
                using var client = new TcpClient();
                await client.ConnectAsync(SenderIP, SenderPort);

                using var stream = client.GetStream();
                byte[] data = Encoding.UTF8.GetBytes(OutgoingMessage);
                await stream.WriteAsync(data, 0, data.Length);

                Messages.Add($"You: {OutgoingMessage}");
                OutgoingMessage = "";
                await InvokeAsync(StateHasChanged);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Sending error: {ex.Message}");
            }
        }
    }
    public class CartItem
    {
        public string Name { get; set; }
        public string ImageUrl { get; set; }
        public int Quantity { get; set; }
        public decimal Price { get; set; }
    }

    List<CartItem> CartItems = new()
    {
        new CartItem { Name = "Hakaw", ImageUrl = "28_Treasures_Menu/hakaw.jpg", Quantity = 1, Price = 163 },
        new CartItem { Name = "Asado Pork", ImageUrl = "28_Treasures_Menu/Asado_Pork.jpg", Quantity = 1, Price = 145 }
    };

    decimal Total => CartItems.Sum(x => x.Quantity * x.Price);

    void IncreaseQuantity(CartItem item) => item.Quantity++;
    void DecreaseQuantity(CartItem item) { if (item.Quantity > 1) item.Quantity--; }
    void RemoveItem(CartItem item) => CartItems.Remove(item);
    void PlaceOrder() => Console.WriteLine("Order placed!");
 }